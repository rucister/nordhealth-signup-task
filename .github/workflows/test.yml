name: 🧪 Test Suite

# Optimize workflow execution - cancel in-progress runs for PRs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - '**.ts'
      - '**.vue'
      - '**.js'
      - '**.json'
      - '**.yml'
      - '**.yaml'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'nuxt.config.ts'
      - 'tsconfig.json'
      - 'eslint.config.mjs'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - '**.ts'
      - '**.vue'
      - '**.js'
      - '**.json'
      - '**.yml'
      - '**.yaml'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'nuxt.config.ts'
      - 'tsconfig.json'
      - 'eslint.config.mjs'
      - '.github/workflows/**'

jobs:
  # Job to detect what changed to skip unnecessary work
  changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      source: ${{ steps.changes.outputs.source }}
      tests: ${{ steps.changes.outputs.tests }}
      config: ${{ steps.changes.outputs.config }}
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Detect file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            source:
              - 'components/**'
              - 'composables/**'
              - 'pages/**'
              - 'layouts/**'
              - 'plugins/**'
              - 'middleware/**'
              - 'server/**'
              - 'utils/**'
              - 'app.vue'
              - '**.ts'
              - '**.vue'
              - '**.js'
            tests:
              - 'tests/**'
              - '**.test.ts'
              - '**.spec.ts'
              - 'vitest.config.ts'
            config:
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'nuxt.config.ts'
              - 'tsconfig.json'
              - 'eslint.config.mjs'
              - '.github/workflows/**'

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.source == 'true' || needs.changes.outputs.tests == 'true' || needs.changes.outputs.config == 'true' }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: �️ Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run linting
        if: ${{ needs.changes.outputs.source == 'true' || needs.changes.outputs.config == 'true' }}
        run: pnpm run lint

      - name: 🧪 Run tests with coverage
        run: pnpm run test:ci

      - name: 📊 Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: 📈 Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: 5monkeys/cobertura-action@master
        with:
          path: ./coverage/cobertura-coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          fail_below_threshold: false

  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    needs: [changes, test]
    if: ${{ needs.changes.outputs.source == 'true' || needs.changes.outputs.config == 'true' }}

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: � Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: � Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build application
        run: pnpm run build

      - name: ✅ Build completed successfully
        run: echo "Build completed successfully!"
